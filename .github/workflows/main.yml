# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ Fanbuild ]
  pull_request:
    branches: [ Fanbuild ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Caching code from https://github.com/TheRealJake12/Kade-Engine-Community
      - name: Restore existing build cache for faster compilation
        uses: actions/cache@v3
        with:
          # not caching the bin folder to prevent asset duplication and stuff like that
          key: fan-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          restore-keys: |
            fan-build-windows
      - name: Installing/Updating libraries
        run: |
          haxelib install hmm --quiet
          haxelib run hmm reinstall
      - name: Building the game
        run: |
          haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Build
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Build
          path: export/release/windows/bin
      - name: Publish Exe
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Executable
          path: export/release/windows/bin/Fanbuild.exe
      - name: Clearing already existing cache
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "fan-build-windows") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Uploading new cache
        uses: actions/cache@v3
        with:
          # caching again since for some reason it doesnt work with the first post cache shit
          key: fan-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
          restore-keys: |
            fan-build-windows
